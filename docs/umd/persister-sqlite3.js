var a,t;a=this,t=function(a){"use strict";const t=a=>typeof a,e="tinybase",n="",s=",",i=t(n),o=(a,t)=>a.repeat(t),c=Promise,r=clearInterval,l=a=>null==a,y=(a,t,e)=>l(a)?e?.():t(a),w=a=>t(a)==i,E=(a,t,e)=>a.slice(t,e),u=a=>a.length,d=async a=>c.all(a),f="_",p="_id",v=a=>`"${a.replace(/"/g,'""')}"`,T="SELECT",m=(a,t="")=>a.join(t),A=(a,t)=>a.map(t),L=a=>0==u(a),R=(a,t)=>a.filter(t),h=(a,...t)=>a.push(...t),O=(a,t)=>a?.has(t)??!1,N=a=>[...a?.values()??[]],S=(a,t)=>a?.delete(t),C=Object,g=a=>C.getPrototypeOf(a),D=C.entries,b=C.keys,I=C.freeze,P=(a=[])=>C.fromEntries(a),F=(...a)=>C.assign({},...a),M=(a,t)=>A(D(a),(([a,e])=>t(e,a))),$=a=>C.values(a),_=a=>u(b(a)),B=a=>(a=>!l(a)&&y(g(a),(a=>a==C.prototype||l(g(a))),(()=>!0)))(a)&&0==_(a),H=a=>new Map(a),j=a=>[...a?.keys()??[]],x=(a,t)=>a?.get(t),W=(a,t)=>A([...a?.entries()??[]],(([a,e])=>t(e,a))),Y=(a,t,e)=>l(e)?(S(a,t),a):a?.set(t,e),k=(a,t,e)=>(O(a,t)||Y(a,t,e()),x(a,t)),q=(a,t,e,n=Y)=>(M(t,((t,n)=>e(a,n,t))),((a,t)=>{((a,t)=>{a?.forEach(t)})(a,((a,e)=>t(e)))})(a,(e=>((a,t)=>!l(((a,t)=>y(a,(a=>a[t])))(a,t)))(t,e)?0:n(a,e))),a),G=a=>new Set(Array.isArray(a)||l(a)?a:[a]),J=(a,t)=>a?.add(t),U=T+"*FROM",z="FROM pragma_table_",K="WHERE",V=(a,t,e,i)=>{const o=H();return[async()=>q(o,P(await d(A(await a("SELECT name "+z+"list WHERE schema='main'AND(type='table'OR type='view')AND name IN("+X(t)+")ORDER BY name",t),(async({name:t})=>[t,P(A(await a(T+" name,type "+z+"info(?)",[t]),(({name:a,type:t})=>[a,t])))])))),((a,t,e)=>Y(o,t,q(k(o,t,H),e,((a,t,e)=>{e!=x(a,t)&&Y(a,t,e)}),((a,t)=>Y(a,t))))),((a,t)=>Y(o,t))),async(t,e)=>((a,t)=>!l(x(x(o,a),t)))(t,e)?P(R(A(await a(U+v(t)),(a=>{return[a[e],(t={...a},n=e,delete t[n],t)];var t,n})),(([a,t])=>!l(a)&&!B(t)))):{},async(t,e,c,r,y,w=!1)=>{const E=G();M(c??{},(a=>A(b(a??{}),(a=>J(E,a)))));const u=N(E);if(!w&&y&&L(u)&&O(o,t))return await a("DROP TABLE"+v(t)),void Y(o,t);if(L(u)||O(o,t)){const s=x(o,t),i=G(j(s));await d([...A(u,(async e=>{S(i,e)||(await a(`ALTER TABLE${v(t)}ADD${v(e)}`),Y(s,e,n))})),...!w&&r?A(N(i),(async n=>{n!=e&&(await a(`ALTER TABLE${v(t)}DROP${v(n)}`),Y(s,n))})):[]])}else await a(`CREATE TABLE${v(t)}(${v(e)} PRIMARY KEY ON CONFLICT REPLACE${m(A(u,(a=>s+v(a))))});`),Y(o,t,H([[e,n],...A(u,(a=>[a,n]))]));if(w)l(c)?await a("DELETE FROM"+v(t)+"WHERE 1"):await d(M(c,(async(n,s)=>{l(n)?await a("DELETE FROM"+v(t)+K+v(e)+"=?",[s]):L(u)||await Q(a,t,e,b(n),[s,...$(n)],i)})));else if(L(u))O(o,t)&&await a("DELETE FROM"+v(t)+"WHERE 1");else{const n=R(j(x(o,t)),(a=>a!=e)),s=[],i=[];M(c??{},((a,t)=>{h(s,t,...A(n,(t=>a?.[t]))),h(i,t)})),await Q(a,t,e,n,s),await a("DELETE FROM"+v(t)+K+v(e)+"NOT IN("+X(i)+")",i)}},async t=>{let n;await a("BEGIN");try{n=await t()}catch(a){e?.(a)}return await a("END"),n}]},Q=async(a,t,e,i,c,r=!0)=>await a("INSERT "+(r?n:"OR REPLACE ")+"INTO"+v(t)+"("+v(e)+m(A(i,(a=>s+v(a))))+")VALUES"+E(o(`,(?${o(",?",u(i))})`,u(c)/(u(i)+1)),1)+(r?"ON CONFLICT("+v(e)+")DO UPDATE SET"+m(A(i,(a=>v(a)+"=excluded."+v(a))),s):n),A(c,(a=>a??null))),X=a=>m(A(a,(()=>"?")),s),Z=JSON.parse,aa=H(),ta=H(),ea=(a,t,e,n,s,i,[o,c]=[],r=[])=>{let w,E,u,d=0,f=0;k(aa,r,(()=>0)),k(ta,r,(()=>[]));const p=async a=>(2!=d&&(d=1,await v.schedule((async()=>{await a(),d=0}))),v),v={load:async(e,n)=>await p((async()=>{try{a.setContent(await t())}catch{a.setContent([e,n])}})),startAutoLoad:async(e={},s={})=>(v.stopAutoLoad(),await v.load(e,s),f=1,u=n((async(e,n)=>{if(n){const t=n();await p((async()=>a.setTransactionChanges(t)))}else await p((async()=>{try{a.setContent(e?.()??await t())}catch(a){i?.(a)}}))})),v),stopAutoLoad:()=>(f&&(s(u),u=void 0,f=0),v),save:async t=>(1!=d&&(d=2,await v.schedule((async()=>{try{await e(a.getContent,t)}catch(a){i?.(a)}d=0}))),v),startAutoSave:async()=>(await v.stopAutoSave().save(),w=a.addDidFinishTransactionListener(((a,t)=>{const[e,n]=t();B(e)&&B(n)||v.save((()=>[e,n]))})),v),stopAutoSave:()=>(y(w,a.delListener),w=void 0,v),schedule:async(...a)=>(h(x(ta,r),...a),await(async()=>{if(!x(aa,r)){for(Y(aa,r,1);!l((a=x(ta,r),E=a.shift()));)try{await E()}catch(a){i?.(a)}Y(aa,r,0)}var a})(),v),getStore:()=>a,destroy:()=>v.stopAutoLoad().stopAutoSave(),getStats:()=>({})};return o&&(v[o]=()=>c),I(v)},na="store",sa=(a,t,e,n,s,[i],o,c,r)=>{const[l,y,w,E]=V(t,o,s);return ea(a,(async()=>await E((async()=>(await l(),Z((await y(i,p))[f]?.[na]??"null"))))),(async a=>await E((async()=>{var t;await l(),await w(i,p,{[f]:{[na]:(t=a()??null,JSON.stringify(t,((a,t)=>t instanceof Map?C.fromEntries([...t]):t)))}},!0,!0)}))),e,n,s,[r,c],c)},ia=(a,t,e,n,s,[i,o,[c,r,y]],w,E,u,v)=>{const[T,m,A,L]=V(t,w,s,v),h=async(a,t)=>await d(W(o,(async([e,n,s,i],o)=>{const c=a[o];t&&void 0===c||await A(e,n,c,s,i,t)}))),O=async(a,t)=>r?await A(y,p,{[f]:a},!0,!0,t):null;return ea(a,(async()=>await L((async()=>{await T();const a=await(async()=>P(R(await d(W(i,(async([a,t],e)=>[a,await m(e,t)]))),(a=>!B(a[1])))))(),t=await(async()=>c?(await m(y,p))[f]:{})();return B(a)&&l(t)?void 0:[a,t]}))),(async(a,t)=>await L((async()=>{if(await T(),l(t)){const[t,e]=a();await h(t),await O(e)}else{const[a,e]=t();await h(a,!0),await O(e,!0)}}))),e,n,s,[u,E],E)},oa="json",ca="autoLoadIntervalSeconds",ra="rowIdColumnName",la="tableId",ya="tableName",wa={mode:oa,[ca]:1},Ea={load:0,save:0,[ya]:e+"_values"},ua=(a,t,e,n)=>{const s=H();return M(a,((a,i)=>{const o=E($(F(t,w(a)?{[e]:a}:a)),0,_(t));l(o[0])||n(i,o[0])||Y(s,i,o)})),s},da="pragma ",fa="data_version",pa="schema_version",va=(a,t,n,s,i,o,c,l,y="getDb",u)=>{let d,f,v;const[m,A,L,R]=(a=>{const t=(a=>F(wa,w(a)?{storeTableName:a}:a??{}))(a),n=t[ca];if(t.mode==oa){const{storeTableName:a=e}=t;return[1,n,[a],G(a)]}const{tables:{load:s={},save:i={}}={},values:o={}}=t,c=E($(F(Ea,o)),0,_(Ea)),r=c[2],l=G(r);return[0,n,[ua(s,{[la]:null,[ra]:p},la,(a=>J(l,a)&&a==r)),ua(i,{[ya]:null,[ra]:p,deleteEmptyColumns:0,deleteEmptyTable:0},ya,((a,t)=>J(l,t)&&t==r)),c],l]})(t);return(m?sa:ia)(a,o?async(a,t)=>(o(a,t),await n(a,t)):n,(a=>{return[(t=async()=>{try{const t=(await n(da+fa))[0][fa],e=(await n(da+pa))[0][pa],s=(await n(T+" TOTAL_CHANGES() c"))[0].c;t==(d??=t)&&e==(f??=e)&&s==(v??=s)||(a(),d=t,f=e)}catch{}},e=A,t(),setInterval(t,1e3*e)),s((t=>R.has(t)?a():0))];var t,e}),(([a,t])=>{r(a),d=f=null,i(t)}),c,L,N(R),l,y,u)},Ta="change";a.createSqlite3Persister=(a,t,e,n,s)=>va(a,e,(async(a,e=[])=>{return await(n=(n,s)=>t.all(a,e,((a,t)=>a?s(a):n(t))),new c(n));var n}),(a=>{const e=(t,e,n)=>a(n);return t.on(Ta,e),e}),(a=>t.off(Ta,a)),n,s,t)},"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((a="undefined"!=typeof globalThis?globalThis:a||self).TinyBasePersisterSqlite3={});

var a,t;a=this,t=function(a){"use strict";const t=a=>typeof a,e="tinybase",n="",s=",",i=t(n),o=(a,t)=>a.repeat(t),c=Promise,r=clearInterval,l=a=>null==a,y=(a,t,e)=>l(a)?e?.():t(a),w=a=>t(a)==i,u=(a,t,e)=>a.slice(t,e),d=a=>a.length,p=async a=>c.all(a),E="_",f="_id",g=a=>`"${a.replace(/"/g,'""')}"`,v="SELECT",m=(a,t="")=>a.join(t),h=(a,t)=>a.map(t),C=a=>0==d(a),T=(a,t)=>a.filter(t),A=(a,...t)=>a.push(...t),b=(a,t)=>a?.has(t)??!1,L=a=>[...a?.values()??[]],N=(a,t)=>a?.delete(t),O=Object,R=a=>O.getPrototypeOf(a),S=O.entries,D=O.keys,I=O.freeze,M=(a=[])=>O.fromEntries(a),P=(...a)=>O.assign({},...a),_=(a,t)=>t in a,F=(a,t)=>h(S(a),(([a,e])=>t(e,a))),x=a=>O.values(a),j=a=>d(D(a)),B=a=>(a=>!l(a)&&y(R(a),(a=>a==O.prototype||l(R(a))),(()=>!0)))(a)&&0==j(a),q=a=>new Map(a),H=a=>[...a?.keys()??[]],Y=(a,t)=>a?.get(t),$=(a,t)=>h([...a?.entries()??[]],(([a,e])=>t(e,a))),k=(a,t,e)=>l(e)?(N(a,t),a):a?.set(t,e),G=(a,t,e)=>(b(a,t)||k(a,t,e()),Y(a,t)),J=(a,t,e,n=k)=>(F(t,((t,n)=>e(a,n,t))),((a,t)=>{((a,t)=>{a?.forEach(t)})(a,((a,e)=>t(e)))})(a,(e=>_(t,e)?0:n(a,e))),a),U=a=>new Set(Array.isArray(a)||l(a)?a:[a]),W=(a,t)=>a?.add(t),z="TABLE",K="ALTER "+z,V="DELETE FROM",Q=v+"*FROM",X="FROM pragma_table_",Z="WHERE",aa=(a,t,e,i)=>{const o=q();return[async()=>J(o,M(await p(h(await a("SELECT name "+X+"list WHERE schema='main'AND(type='table'OR type='view')AND name IN("+ea(t)+")ORDER BY name",t),(async({name:t})=>[t,M(h(await a(v+" name,type "+X+"info(?)",[t]),(({name:a,type:t})=>[a,t])))])))),((a,t,e)=>k(o,t,J(G(o,t,q),e,((a,t,e)=>{e!=Y(a,t)&&k(a,t,e)}),((a,t)=>k(a,t))))),((a,t)=>k(o,t))),async(t,e)=>((a,t)=>!l(Y(Y(o,a),t)))(t,e)?M(T(h(await a(Q+g(t)),(a=>{return[a[e],(t={...a},n=e,delete t[n],t)];var t,n})),(([a,t])=>!l(a)&&!B(t)))):{},async(t,e,c,r,y,w=!1)=>{const u=U();F(c??{},(a=>h(D(a??{}),(a=>W(u,a)))));const d=L(u);if(!w&&y&&C(d)&&b(o,t))return await a("DROP "+z+g(t)),void k(o,t);if(C(d)||b(o,t)){const s=Y(o,t),i=U(H(s));await p([...h(d,(async e=>{N(i,e)||(await a(K+g(t)+"ADD"+g(e)),k(s,e,n))})),...!w&&r?h(L(i),(async n=>{n!=e&&(await a(K+g(t)+"DROP"+g(n)),k(s,n))})):[]])}else await a("CREATE "+z+g(t)+"("+g(e)+` PRIMARY KEY ON CONFLICT REPLACE${m(h(d,(a=>s+g(a))))});`),k(o,t,q([[e,n],...h(d,(a=>[a,n]))]));if(w)l(c)?await a(V+g(t)+Z+" 1"):await p(F(c,(async(n,s)=>{l(n)?await a(V+g(t)+Z+g(e)+"=?",[s]):C(d)||await ta(a,t,e,D(n),[s,...x(n)],i)})));else if(C(d))b(o,t)&&await a(V+g(t)+Z+" 1");else{const n=T(H(Y(o,t)),(a=>a!=e)),s=[],r=[];F(c??{},((a,t)=>{A(s,t,...h(n,(t=>a?.[t]))),A(r,t)})),await ta(a,t,e,n,s,i),await a(V+g(t)+Z+g(e)+"NOT IN("+ea(r)+")",r)}},async t=>{let n;await a("BEGIN");try{n=await t()}catch(a){e?.(a)}return await a("END"),n}]},ta=async(a,t,e,i,c,r=!0)=>await a("INSERT "+(r?n:"OR REPLACE ")+"INTO"+g(t)+"("+g(e)+m(h(i,(a=>s+g(a))))+")VALUES"+u(o(`,(?${o(",?",d(i))})`,d(c)/(d(i)+1)),1)+(r?"ON CONFLICT("+g(e)+")DO UPDATE SET"+m(h(i,(a=>g(a)+"=excluded."+g(a))),s):n),h(c,(a=>a??null))),ea=a=>m(h(a,(()=>"?")),s),na=JSON.parse,sa=q(),ia=q(),oa=a=>w(a?.[0]),ca=(a,t,e,n,s,i,o,[c,r]=[],w=[])=>{let u,d,p,E=0,f=0;G(sa,w,(()=>0)),G(ia,w,(()=>[]));const[g,v,m,h]=((a,t)=>!a||l(t.getMergeableContent)?[0,t.getContent,t.getTransactionChanges,([a,t])=>!B(a)||!B(t)]:[1,t.getMergeableContent,t.getTransactionMergeableChanges,([,[[,a],[,t]]])=>!B(a)||!B(t)])(o,a),C=async a=>(2!=E&&(E=1,await T.schedule((async()=>{await a(),E=0}))),T),T={load:async(e,n)=>await C((async()=>{try{const e=await t();(g&&oa(e)?a.setMergeableContent:a.setContent)(e)}catch{a.setContent([e,n])}})),startAutoLoad:async(e={},s={})=>(T.stopAutoLoad(),await T.load(e,s),f=1,p=n((async(e,n)=>{if(n){const t=n();await C((async()=>(g&&oa(t)?a.applyMergeableChanges:a.applyChanges)(t)))}else await C((async()=>{try{const n=e?.()??await t();(g&&oa(n)?a.setMergeableContent:a.setContent)(n)}catch(a){i?.(a)}}))})),T),stopAutoLoad:()=>(f&&(s(p),p=void 0,f=0),T),save:async a=>(1!=E&&(E=2,await T.schedule((async()=>{try{await e(v,a)}catch(a){i?.(a)}E=0}))),T),startAutoSave:async()=>(await T.stopAutoSave().save(),u=a.addDidFinishTransactionListener((()=>{const a=m();h(a)&&T.save((()=>a))})),T),stopAutoSave:()=>(y(u,a.delListener),u=void 0,T),schedule:async(...a)=>(A(Y(ia,w),...a),await(async()=>{if(!Y(sa,w)){for(k(sa,w,1);!l((a=Y(ia,w),d=a.shift()));)try{await d()}catch(a){i?.(a)}k(sa,w,0)}var a})(),T),getStore:()=>a,destroy:()=>T.stopAutoLoad().stopAutoSave(),getStats:()=>({})};return c&&(T[c]=()=>r),I(T)},ra="store",la=(a,t,e,n,s,[i],o,c,r,l)=>{const[y,w,u,d]=aa(t,o,s,l);return ca(a,(async()=>await d((async()=>(await y(),na((await w(i,f))[E]?.[ra]??"null"))))),(async a=>await d((async()=>{var t;await y(),await u(i,f,{[E]:{[ra]:(t=a()??null,JSON.stringify(t,((a,t)=>t instanceof Map?O.fromEntries([...t]):t)))}},!0,!0)}))),e,n,s,!1,[r,c],c)},ya=(a,t,e,n,s,[i,o,[c,r,y]],w,u,d,g)=>{const[v,m,h,C]=aa(t,w,s,g),A=async(a,t)=>await p($(o,(async([e,n,s,i],o)=>{t&&!_(a,o)||await h(e,n,a[o],s,i,t)}))),b=async(a,t)=>r?await h(y,f,{[E]:a},!0,!0,t):null;return ca(a,(async()=>await C((async()=>{await v();const a=await(async()=>M(T(await p($(i,(async([a,t],e)=>[a,await m(e,t)]))),(a=>!B(a[1])))))(),t=await(async()=>c?(await m(y,f))[E]:{})();return B(a)&&l(t)?void 0:[a,t]}))),(async(a,t)=>await C((async()=>{if(await v(),l(t)){const[t,e]=a();await A(t),await b(e)}else{const[a,e]=t();await A(a,!0),await b(e,!0)}}))),e,n,s,!1,[d,u],u)},wa="json",ua="autoLoadIntervalSeconds",da="rowIdColumnName",pa="tableId",Ea="tableName",fa={mode:wa,[ua]:1},ga={load:0,save:0,[Ea]:e+"_values"},va=(a,t,e,n)=>{const s=q();return F(a,((a,i)=>{const o=u(x(P(t,w(a)?{[e]:a}:a)),0,j(t));l(o[0])||n(i,o[0])||k(s,i,o)})),s},ma="pragma ",ha="data_version",Ca="schema_version",Ta=(a,t,n,s,i,o,c,l,y="getDb",d)=>{let p,E,g;const[m,h,C,T]=(a=>{const t=(a=>P(fa,w(a)?{storeTableName:a}:a??{}))(a),n=t[ua];if(t.mode==wa){const{storeTableName:a=e}=t;return[1,n,[a],U(a)]}const{tables:{load:s={},save:i={}}={},values:o={}}=t,c=u(x(P(ga,o)),0,j(ga)),r=c[2],l=U(r);return[0,n,[va(s,{[pa]:null,[da]:f},pa,(a=>W(l,a)&&a==r)),va(i,{[Ea]:null,[da]:f,deleteEmptyColumns:0,deleteEmptyTable:0},Ea,((a,t)=>W(l,t)&&t==r)),c],l]})(t);return(m?la:ya)(a,o?async(a,t)=>(o(a,t),await n(a,t)):n,(a=>{return[(t=async()=>{try{const t=(await n(ma+ha))[0][ha],e=(await n(ma+Ca))[0][Ca],s=(await n(v+" TOTAL_CHANGES() c"))[0].c;t==(p??=t)&&e==(E??=e)&&s==(g??=s)||(a(),p=t,E=e)}catch{}},e=h,t(),setInterval(t,1e3*e)),s((t=>T.has(t)?a():0))];var t,e}),(([a,t])=>{r(a),p=E=null,i(t)}),c,C,L(T),l,y,d)};a.createLibSqlPersister=(a,t,e,n,s)=>Ta(a,e,(async(a,e=[])=>(await t.execute({sql:a,args:e})).rows),(()=>()=>0),(a=>a()),n,s,t,"getClient")},"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((a="undefined"!=typeof globalThis?globalThis:a||self).TinyBasePersisterLibsql={});

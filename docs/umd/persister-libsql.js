var a,t;a=this,t=function(a){"use strict";const t=a=>typeof a,e="tinybase",s="",n=",",i=t(s),o=(a,t)=>a.repeat(t),c=Promise,r=clearInterval,l=a=>null==a,y=(a,t,e)=>l(a)?e?.():t(a),w=a=>t(a)==i,u=(a,t,e)=>a.slice(t,e),d=a=>a.length,E=async a=>c.all(a),f="_",p="_id",v=a=>`"${a.replace(/"/g,'""')}"`,m="SELECT",A=(a,t="")=>a.join(t),T=(a,t)=>a.map(t),h=a=>0==d(a),L=(a,t)=>a.filter(t),N=(a,...t)=>a.push(...t),O=(a,t)=>a?.has(t)??!1,C=a=>[...a?.values()??[]],R=(a,t)=>a?.delete(t),g=Object,S=a=>g.getPrototypeOf(a),b=g.entries,D=g.keys,I=g.freeze,P=(a=[])=>g.fromEntries(a),_=(...a)=>g.assign({},...a),F=(a,t)=>T(b(a),(([a,e])=>t(e,a))),M=a=>g.values(a),x=a=>d(D(a)),j=a=>(a=>!l(a)&&y(S(a),(a=>a==g.prototype||l(S(a))),(()=>!0)))(a)&&0==x(a),B=a=>new Map(a),q=a=>[...a?.keys()??[]],H=(a,t)=>a?.get(t),Y=(a,t)=>T([...a?.entries()??[]],(([a,e])=>t(e,a))),$=(a,t,e)=>l(e)?(R(a,t),a):a?.set(t,e),k=(a,t,e)=>(O(a,t)||$(a,t,e()),H(a,t)),G=(a,t,e,s=$)=>(F(t,((t,s)=>e(a,s,t))),((a,t)=>{((a,t)=>{a?.forEach(t)})(a,((a,e)=>t(e)))})(a,(e=>((a,t)=>!l(((a,t)=>y(a,(a=>a[t])))(a,t)))(t,e)?0:s(a,e))),a),J=a=>new Set(Array.isArray(a)||l(a)?a:[a]),U=(a,t)=>a?.add(t),W="TABLE",z="ALTER "+W,K="DELETE FROM",V=m+"*FROM",Q="FROM pragma_table_",X="WHERE",Z=(a,t,e,i)=>{const o=B();return[async()=>G(o,P(await E(T(await a("SELECT name "+Q+"list WHERE schema='main'AND(type='table'OR type='view')AND name IN("+ta(t)+")ORDER BY name",t),(async({name:t})=>[t,P(T(await a(m+" name,type "+Q+"info(?)",[t]),(({name:a,type:t})=>[a,t])))])))),((a,t,e)=>$(o,t,G(k(o,t,B),e,((a,t,e)=>{e!=H(a,t)&&$(a,t,e)}),((a,t)=>$(a,t))))),((a,t)=>$(o,t))),async(t,e)=>((a,t)=>!l(H(H(o,a),t)))(t,e)?P(L(T(await a(V+v(t)),(a=>{return[a[e],(t={...a},s=e,delete t[s],t)];var t,s})),(([a,t])=>!l(a)&&!j(t)))):{},async(t,e,c,r,y,w=!1)=>{const u=J();F(c??{},(a=>T(D(a??{}),(a=>U(u,a)))));const d=C(u);if(!w&&y&&h(d)&&O(o,t))return await a("DROP "+W+v(t)),void $(o,t);if(h(d)||O(o,t)){const n=H(o,t),i=J(q(n));await E([...T(d,(async e=>{R(i,e)||(await a(z+v(t)+"ADD"+v(e)),$(n,e,s))})),...!w&&r?T(C(i),(async s=>{s!=e&&(await a(z+v(t)+"DROP"+v(s)),$(n,s))})):[]])}else await a("CREATE "+W+v(t)+"("+v(e)+` PRIMARY KEY ON CONFLICT REPLACE${A(T(d,(a=>n+v(a))))});`),$(o,t,B([[e,s],...T(d,(a=>[a,s]))]));if(w)l(c)?await a(K+v(t)+X+" 1"):await E(F(c,(async(s,n)=>{l(s)?await a(K+v(t)+X+v(e)+"=?",[n]):h(d)||await aa(a,t,e,D(s),[n,...M(s)],i)})));else if(h(d))O(o,t)&&await a(K+v(t)+X+" 1");else{const s=L(q(H(o,t)),(a=>a!=e)),n=[],r=[];F(c??{},((a,t)=>{N(n,t,...T(s,(t=>a?.[t]))),N(r,t)})),await aa(a,t,e,s,n,i),await a(K+v(t)+X+v(e)+"NOT IN("+ta(r)+")",r)}},async t=>{let s;await a("BEGIN");try{s=await t()}catch(a){e?.(a)}return await a("END"),s}]},aa=async(a,t,e,i,c,r=!0)=>await a("INSERT "+(r?s:"OR REPLACE ")+"INTO"+v(t)+"("+v(e)+A(T(i,(a=>n+v(a))))+")VALUES"+u(o(`,(?${o(",?",d(i))})`,d(c)/(d(i)+1)),1)+(r?"ON CONFLICT("+v(e)+")DO UPDATE SET"+A(T(i,(a=>v(a)+"=excluded."+v(a))),n):s),T(c,(a=>a??null))),ta=a=>A(T(a,(()=>"?")),n),ea=JSON.parse,sa=B(),na=B(),ia=(a,t,e,s,n,i,[o,c]=[],r=[])=>{let w,u,d,E=0,f=0;k(sa,r,(()=>0)),k(na,r,(()=>[]));const p=async a=>(2!=E&&(E=1,await v.schedule((async()=>{await a(),E=0}))),v),v={load:async(e,s)=>await p((async()=>{try{a.setContent(await t())}catch{a.setContent([e,s])}})),startAutoLoad:async(e={},n={})=>(v.stopAutoLoad(),await v.load(e,n),f=1,d=s((async(e,s)=>{if(s){const t=s();await p((async()=>a.setTransactionChanges(t)))}else await p((async()=>{try{a.setContent(e?.()??await t())}catch(a){i?.(a)}}))})),v),stopAutoLoad:()=>(f&&(n(d),d=void 0,f=0),v),save:async t=>(1!=E&&(E=2,await v.schedule((async()=>{try{await e(a.getContent,t)}catch(a){i?.(a)}E=0}))),v),startAutoSave:async()=>(await v.stopAutoSave().save(),w=a.addDidFinishTransactionListener(((a,t)=>{const[e,s]=t();j(e)&&j(s)||v.save((()=>[e,s]))})),v),stopAutoSave:()=>(y(w,a.delListener),w=void 0,v),schedule:async(...a)=>(N(H(na,r),...a),await(async()=>{if(!H(sa,r)){for($(sa,r,1);!l((a=H(na,r),u=a.shift()));)try{await u()}catch(a){i?.(a)}$(sa,r,0)}var a})(),v),getStore:()=>a,destroy:()=>v.stopAutoLoad().stopAutoSave(),getStats:()=>({})};return o&&(v[o]=()=>c),I(v)},oa="store",ca=(a,t,e,s,n,[i],o,c,r,l)=>{const[y,w,u,d]=Z(t,o,n,l);return ia(a,(async()=>await d((async()=>(await y(),ea((await w(i,p))[f]?.[oa]??"null"))))),(async a=>await d((async()=>{var t;await y(),await u(i,p,{[f]:{[oa]:(t=a()??null,JSON.stringify(t,((a,t)=>t instanceof Map?g.fromEntries([...t]):t)))}},!0,!0)}))),e,s,n,[r,c],c)},ra=(a,t,e,s,n,[i,o,[c,r,y]],w,u,d,v)=>{const[m,A,T,h]=Z(t,w,n,v),N=async(a,t)=>await E(Y(o,(async([e,s,n,i],o)=>{const c=a[o];t&&void 0===c||await T(e,s,c,n,i,t)}))),O=async(a,t)=>r?await T(y,p,{[f]:a},!0,!0,t):null;return ia(a,(async()=>await h((async()=>{await m();const a=await(async()=>P(L(await E(Y(i,(async([a,t],e)=>[a,await A(e,t)]))),(a=>!j(a[1])))))(),t=await(async()=>c?(await A(y,p))[f]:{})();return j(a)&&l(t)?void 0:[a,t]}))),(async(a,t)=>await h((async()=>{if(await m(),l(t)){const[t,e]=a();await N(t),await O(e)}else{const[a,e]=t();await N(a,!0),await O(e,!0)}}))),e,s,n,[d,u],u)},la="json",ya="autoLoadIntervalSeconds",wa="rowIdColumnName",ua="tableId",da="tableName",Ea={mode:la,[ya]:1},fa={load:0,save:0,[da]:e+"_values"},pa=(a,t,e,s)=>{const n=B();return F(a,((a,i)=>{const o=u(M(_(t,w(a)?{[e]:a}:a)),0,x(t));l(o[0])||s(i,o[0])||$(n,i,o)})),n},va="pragma ",ma="data_version",Aa="schema_version",Ta=(a,t,s,n,i,o,c,l,y="getDb",d)=>{let E,f,v;const[A,T,h,L]=(a=>{const t=(a=>_(Ea,w(a)?{storeTableName:a}:a??{}))(a),s=t[ya];if(t.mode==la){const{storeTableName:a=e}=t;return[1,s,[a],J(a)]}const{tables:{load:n={},save:i={}}={},values:o={}}=t,c=u(M(_(fa,o)),0,x(fa)),r=c[2],l=J(r);return[0,s,[pa(n,{[ua]:null,[wa]:p},ua,(a=>U(l,a)&&a==r)),pa(i,{[da]:null,[wa]:p,deleteEmptyColumns:0,deleteEmptyTable:0},da,((a,t)=>U(l,t)&&t==r)),c],l]})(t);return(A?ca:ra)(a,o?async(a,t)=>(o(a,t),await s(a,t)):s,(a=>{return[(t=async()=>{try{const t=(await s(va+ma))[0][ma],e=(await s(va+Aa))[0][Aa],n=(await s(m+" TOTAL_CHANGES() c"))[0].c;t==(E??=t)&&e==(f??=e)&&n==(v??=n)||(a(),E=t,f=e)}catch{}},e=T,t(),setInterval(t,1e3*e)),n((t=>L.has(t)?a():0))];var t,e}),(([a,t])=>{r(a),E=f=null,i(t)}),c,h,C(L),l,y,d)};a.createLibSqlPersister=(a,t,e,s,n)=>Ta(a,e,(async(a,e=[])=>(await t.execute({sql:a,args:e})).rows),(()=>()=>0),(a=>a()),s,n,t,"getClient")},"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((a="undefined"!=typeof globalThis?globalThis:a||self).TinyBasePersisterLibsql={});

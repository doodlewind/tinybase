var a,t;a=this,t=function(a){"use strict";const t=a=>typeof a,e="tinybase",n="",s=",",i=t(n),o=(a,t)=>a.repeat(t),c=Promise,r=clearInterval,l=a=>null==a,y=(a,t,e)=>l(a)?e?.():t(a),w=a=>t(a)==i,u=(a,t,e)=>a.slice(t,e),d=a=>a.length,p=async a=>c.all(a),E="_",f="_id",m=a=>`"${a.replace(/"/g,'""')}"`,g="SELECT",v=(a,t="")=>a.join(t),C=(a,t)=>a.map(t),h=a=>0==d(a),T=(a,t)=>a.filter(t),A=(a,...t)=>a.push(...t),O=(a,t)=>a?.has(t)??!1,b=a=>[...a?.values()??[]],N=(a,t)=>a?.delete(t),L=Object,R=a=>L.getPrototypeOf(a),S=L.entries,D=L.keys,I=L.freeze,M=(a=[])=>L.fromEntries(a),P=(...a)=>L.assign({},...a),_=(a,t)=>t in a,F=(a,t)=>C(S(a),(([a,e])=>t(e,a))),x=a=>L.values(a),j=a=>d(D(a)),B=a=>(a=>!l(a)&&y(R(a),(a=>a==L.prototype||l(R(a))),(()=>!0)))(a)&&0==j(a),W=a=>new Map(a),H=a=>[...a?.keys()??[]],U=(a,t)=>a?.get(t),Y=(a,t)=>C([...a?.entries()??[]],(([a,e])=>t(e,a))),$=(a,t,e)=>l(e)?(N(a,t),a):a?.set(t,e),k=(a,t,e)=>(O(a,t)||$(a,t,e()),U(a,t)),q=(a,t,e,n=$)=>(F(t,((t,n)=>e(a,n,t))),((a,t)=>{((a,t)=>{a?.forEach(t)})(a,((a,e)=>t(e)))})(a,(e=>_(t,e)?0:n(a,e))),a),G=a=>new Set(Array.isArray(a)||l(a)?a:[a]),J=(a,t)=>a?.add(t),z="TABLE",K="ALTER "+z,V="DELETE FROM",Q=g+"*FROM",X="FROM pragma_table_",Z="WHERE",aa=(a,t,e,i)=>{const o=W();return[async()=>q(o,M(await p(C(await a("SELECT name "+X+"list WHERE schema='main'AND(type='table'OR type='view')AND name IN("+ea(t)+")ORDER BY name",t),(async({name:t})=>[t,M(C(await a(g+" name,type "+X+"info(?)",[t]),(({name:a,type:t})=>[a,t])))])))),((a,t,e)=>$(o,t,q(k(o,t,W),e,((a,t,e)=>{e!=U(a,t)&&$(a,t,e)}),((a,t)=>$(a,t))))),((a,t)=>$(o,t))),async(t,e)=>((a,t)=>!l(U(U(o,a),t)))(t,e)?M(T(C(await a(Q+m(t)),(a=>{return[a[e],(t={...a},n=e,delete t[n],t)];var t,n})),(([a,t])=>!l(a)&&!B(t)))):{},async(t,e,c,r,y,w=!1)=>{const u=G();F(c??{},(a=>C(D(a??{}),(a=>J(u,a)))));const d=b(u);if(!w&&y&&h(d)&&O(o,t))return await a("DROP "+z+m(t)),void $(o,t);if(h(d)||O(o,t)){const s=U(o,t),i=G(H(s));await p([...C(d,(async e=>{N(i,e)||(await a(K+m(t)+"ADD"+m(e)),$(s,e,n))})),...!w&&r?C(b(i),(async n=>{n!=e&&(await a(K+m(t)+"DROP"+m(n)),$(s,n))})):[]])}else await a("CREATE "+z+m(t)+"("+m(e)+` PRIMARY KEY ON CONFLICT REPLACE${v(C(d,(a=>s+m(a))))});`),$(o,t,W([[e,n],...C(d,(a=>[a,n]))]));if(w)l(c)?await a(V+m(t)+Z+" 1"):await p(F(c,(async(n,s)=>{l(n)?await a(V+m(t)+Z+m(e)+"=?",[s]):h(d)||await ta(a,t,e,D(n),[s,...x(n)],i)})));else if(h(d))O(o,t)&&await a(V+m(t)+Z+" 1");else{const n=T(H(U(o,t)),(a=>a!=e)),s=[],r=[];F(c??{},((a,t)=>{A(s,t,...C(n,(t=>a?.[t]))),A(r,t)})),await ta(a,t,e,n,s,i),await a(V+m(t)+Z+m(e)+"NOT IN("+ea(r)+")",r)}},async t=>{let n;await a("BEGIN");try{n=await t()}catch(a){e?.(a)}return await a("END"),n}]},ta=async(a,t,e,i,c,r=!0)=>await a("INSERT "+(r?n:"OR REPLACE ")+"INTO"+m(t)+"("+m(e)+v(C(i,(a=>s+m(a))))+")VALUES"+u(o(`,(?${o(",?",d(i))})`,d(c)/(d(i)+1)),1)+(r?"ON CONFLICT("+m(e)+")DO UPDATE SET"+v(C(i,(a=>m(a)+"=excluded."+m(a))),s):n),C(c,(a=>a??null))),ea=a=>v(C(a,(()=>"?")),s),na=JSON.parse,sa=W(),ia=W(),oa=a=>w(a?.[0]),ca=(a,t,e,n,s,i,o,[c,r]=[],w=[])=>{let u,d,p,E=0,f=0;k(sa,w,(()=>0)),k(ia,w,(()=>[]));const[m,g,v,C]=((a,t)=>!a||l(t.getMergeableContent)?[0,t.getContent,t.getTransactionChanges,([a,t])=>!B(a)||!B(t)]:[1,t.getMergeableContent,t.getTransactionMergeableChanges,([,[[,a],[,t]]])=>!B(a)||!B(t)])(o,a),h=async a=>(2!=E&&(E=1,await T.schedule((async()=>{await a(),E=0}))),T),T={load:async(e,n)=>await h((async()=>{try{const e=await t();(m&&oa(e)?a.setMergeableContent:a.setContent)(e)}catch{a.setContent([e,n])}})),startAutoLoad:async(e={},s={})=>(T.stopAutoLoad(),await T.load(e,s),f=1,p=n((async(e,n)=>{if(n){const t=n();await h((async()=>(m&&oa(t)?a.applyMergeableChanges:a.applyChanges)(t)))}else await h((async()=>{try{const n=e?.()??await t();(m&&oa(n)?a.setMergeableContent:a.setContent)(n)}catch(a){i?.(a)}}))})),T),stopAutoLoad:()=>(f&&(s(p),p=void 0,f=0),T),save:async a=>(1!=E&&(E=2,await T.schedule((async()=>{try{await e(g,a)}catch(a){i?.(a)}E=0}))),T),startAutoSave:async()=>(await T.stopAutoSave().save(),u=a.addDidFinishTransactionListener((()=>{const a=v();C(a)&&T.save((()=>a))})),T),stopAutoSave:()=>(y(u,a.delListener),u=void 0,T),schedule:async(...a)=>(A(U(ia,w),...a),await(async()=>{if(!U(sa,w)){for($(sa,w,1);!l((a=U(ia,w),d=a.shift()));)try{await d()}catch(a){i?.(a)}$(sa,w,0)}var a})(),T),getStore:()=>a,destroy:()=>T.stopAutoLoad().stopAutoSave(),getStats:()=>({})};return c&&(T[c]=()=>r),I(T)},ra="store",la=(a,t,e,n,s,[i],o,c,r,l)=>{const[y,w,u,d]=aa(t,o,s,l);return ca(a,(async()=>await d((async()=>(await y(),na((await w(i,f))[E]?.[ra]??"null"))))),(async a=>await d((async()=>{var t;await y(),await u(i,f,{[E]:{[ra]:(t=a()??null,JSON.stringify(t,((a,t)=>t instanceof Map?L.fromEntries([...t]):t)))}},!0,!0)}))),e,n,s,!1,[r,c],c)},ya=(a,t,e,n,s,[i,o,[c,r,y]],w,u,d,m)=>{const[g,v,C,h]=aa(t,w,s,m),A=async(a,t)=>await p(Y(o,(async([e,n,s,i],o)=>{t&&!_(a,o)||await C(e,n,a[o],s,i,t)}))),O=async(a,t)=>r?await C(y,f,{[E]:a},!0,!0,t):null;return ca(a,(async()=>await h((async()=>{await g();const a=await(async()=>M(T(await p(Y(i,(async([a,t],e)=>[a,await v(e,t)]))),(a=>!B(a[1])))))(),t=await(async()=>c?(await v(y,f))[E]:{})();return B(a)&&l(t)?void 0:[a,t]}))),(async(a,t)=>await h((async()=>{if(await g(),l(t)){const[t,e]=a();await A(t),await O(e)}else{const[a,e]=t();await A(a,!0),await O(e,!0)}}))),e,n,s,!1,[d,u],u)},wa="json",ua="autoLoadIntervalSeconds",da="rowIdColumnName",pa="tableId",Ea="tableName",fa={mode:wa,[ua]:1},ma={load:0,save:0,[Ea]:e+"_values"},ga=(a,t,e,n)=>{const s=W();return F(a,((a,i)=>{const o=u(x(P(t,w(a)?{[e]:a}:a)),0,j(t));l(o[0])||n(i,o[0])||$(s,i,o)})),s},va="pragma ",Ca="data_version",ha="schema_version",Ta=(a,t,n,s,i,o,c,l,y="getDb",d)=>{let p,E,m;const[v,C,h,T]=(a=>{const t=(a=>P(fa,w(a)?{storeTableName:a}:a??{}))(a),n=t[ua];if(t.mode==wa){const{storeTableName:a=e}=t;return[1,n,[a],G(a)]}const{tables:{load:s={},save:i={}}={},values:o={}}=t,c=u(x(P(ma,o)),0,j(ma)),r=c[2],l=G(r);return[0,n,[ga(s,{[pa]:null,[da]:f},pa,(a=>J(l,a)&&a==r)),ga(i,{[Ea]:null,[da]:f,deleteEmptyColumns:0,deleteEmptyTable:0},Ea,((a,t)=>J(l,t)&&t==r)),c],l]})(t);return(v?la:ya)(a,o?async(a,t)=>(o(a,t),await n(a,t)):n,(a=>{return[(t=async()=>{try{const t=(await n(va+Ca))[0][Ca],e=(await n(va+ha))[0][ha],s=(await n(g+" TOTAL_CHANGES() c"))[0].c;t==(p??=t)&&e==(E??=e)&&s==(m??=s)||(a(),p=t,E=e)}catch{}},e=C,t(),setInterval(t,1e3*e)),s((t=>T.has(t)?a():0))];var t,e}),(([a,t])=>{r(a),p=E=null,i(t)}),c,h,b(T),l,y,d)};a.createCrSqliteWasmPersister=(a,t,e,n,s)=>Ta(a,e,(async(a,e=[])=>await t.execO(a,e)),(a=>t.onUpdate(((t,e,n)=>a(n)))),(a=>a()),n,s,t)},"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((a="undefined"!=typeof globalThis?globalThis:a||self).TinyBasePersisterCrSqliteWasm={});
